#!/usr/bin/env bash

m4_include(gu_tools.inc.sh)

usage() {
  printf '%s\n' \
      'gpush @VERSION@' \
      '' \
      'gpush push branch to a remote branch.' \
      '' \
      'Usage: gpush [-h] [-f] [-r remote] [-b branch]' \
      '' \
      '    -h         Show this usage' \
      '    -f         Force pushing to remote.' \
      '    -r remote  Name of the remote to push into.' \
      '    -b branch  Name of branch to push.'
}

set -e

# defaults
if [ -z "${REMOTE-}" ]; then
  REMOTE=origin
fi

if [ -z "${BRANCH-}" ]; then
  BRANCH=development
fi

# parse argv variables
while [ "$#" -gt 0 ]; do
  case "$1" in
    -h|--help) HELP="$1"; shift 1;;
    -r|--remote) REMOTE="$2"; shift 2;;
    -b|--branch) BRANCH="$2"; shift 2;;
    -f|-y|--force|--yes) FORCE=1; shift 1;;
    -r=*|--remote=*) REMOTE="${1#*=}"; shift 1;;
    -b=*|--branch=*) BRANCH="${1#*=}"; shift 1;;
    -f=*|-y=*|--force=*|--yes=*) FORCE="${1#*=}"; shift 1;;

    -*) error "Unknown option: $1"; exit 1;;
    *) HELP="$1"; shift 1;;
  esac
done

if [ ! -z "${HELP-}" ]; then
  usage
  exit 0
fi

if remote_avail $REMOTE; then
  read -r -p "You are pushing \"$BRANCH\" branch into the remote \"$REMOTE/$BRANCH\" branch... Press CTRL-c to cancel or Enter to continue.." -n 1 dummy
  echo
  if asksure; then
    if [ ! -z "${FORCE-}" ]; then
      git push -u -f $REMOTE $BRANCH
    else
      git push -u $REMOTE $BRANCH
    fi
  fi
fi

# vim: set et ts=2 sw=2:
