#!/usr/bin/env bash

m4_include(gu_tools.inc.sh)

usage() {
  printf '%s\n' \
      'gprune @VERSION@' \
      '' \
      'gprune prune and delete remote branches and ' \
      'prune and delete local branches no longer on remote.' \
      '' \
      'Usage: gprune [-h] [branch]' \
      '' \
      '    -h         Show this usage' \
      '    branch     Name of branch to delete.'
}

set -e

branch=$1
if [ "$branch" = "-h" ]; then
  usage
  exit 0
fi
git fetch --prune
current_branch=$(git branch | grep "*" | sed 's/* //')
if [ "$current_branch" = "$branch" ]; then
  echo Switching to a different branch
  if branch_avail_on_origin development; then
    git checkout development
  else
    git checkout master
  fi
fi
if [ "$branch" != "" ]; then
  if branch_avail_on_origin $branch; then
    if asksure; then
      read -r -p "Are you sure you want to delete $branch... Press CTRL-c to cancel or Enter to continue.." -n 1 dummy
      git push origin --delete $branch
      git branch -D $branch
    fi
  else
    git branch -D $branch
  fi
else
  git branch -D $(git branch -vv | grep ': gone] ' | awk '{print $1}' | xargs)
fi

# vim: set et ts=2 sw=2:
